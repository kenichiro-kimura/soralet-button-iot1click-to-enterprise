name: SORACOM Orbit CI/CD

on:
  push:
  workflow_dispatch:

env:
  COVERAGE: jp

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: soracom/orbit-sdk-assemblyscript
          path: orbit-sdk-assemblyscript
      - name: initialize
        run: npm run init
      - name: copy libs
        run: cp -r /workspaces/orbit-sdk-assemblyscript ../
      - name: build optimized
        run: npm run build:optimized
      - name: upload assets
        uses: actions/upload-artifact@v2
        with:
          name: soracom-orbit
          path: build/soralet-optimized.wasm

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: soracom-orbit
      - name: upload
        uses: kenichiro-kimura/action-soracom-upload-soralet@1.2.0
        id: upload
        with:
          soracom_auth_key: ${{ secrets.AUTH_KEY }}
          soracom_auth_key_id: ${{ secrets.AUTH_KEY_ID}}
          soracom_coverage: ${{ env.COVERAGE }}
          soracom_soralet_id: button-enterprise-to-iot1click
          soracom_soralet_filename: soralet-optimized.wasm
          soracom_delete_old_soralet: true
      - name: deploy production
        uses: kenichiro-kimura/action-soracom-configure-orbit@1.1.0
        with:
          soracom_auth_key: ${{ secrets.AUTH_KEY }}
          soracom_auth_key_id: ${{ secrets.AUTH_KEY_ID}}
          soracom_coverage: ${{ env.COVERAGE }}
          soracom_soralet_code_srn: ${{ steps.upload.outputs.soralet_srn }}
          soracom_soralet_direction: uplink
          soracom_group_id: ${{ secrets.SORACOM_GROUP_ID_PROD }}
          soracom_soralet_enabled: true
          soracom_soralet_use_metadata: true